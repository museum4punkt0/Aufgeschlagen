//
//  MenuSectionItemDocument.cs
//  GuidePilot
//
//  Documents linked to menu section item.
//
//  Generated by GuidePilot - EnumGenerator
//  Copyright Â© 2021 MicroMovie Media GmbH. All rights reserved.


using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using UnityEngine;
using UnityEngine.Scripting;


namespace com.guidepilot.guidepilotcore {
	[Preserve]
	public class MenuSectionItemDocument: CoreObject, DocumentRelation {
	[Preserve]
	public enum Relation {
		Media,
		MainImage,
		IconImage,
		MainIconImage,
		TargetIconImage
	}

	[Preserve]
	public class RelationConverter : JsonConverter {

		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) {
			MenuSectionItemDocument.Relation castedValue = (MenuSectionItemDocument.Relation)value;
			switch (castedValue) {
			case MenuSectionItemDocument.Relation.Media:
			writer.WriteValue("MEDIA");break;
			case MenuSectionItemDocument.Relation.MainImage:
			writer.WriteValue("MAIN_IMAGE");break;
			case MenuSectionItemDocument.Relation.IconImage:
			writer.WriteValue("ICON_IMAGE");break;
			case MenuSectionItemDocument.Relation.MainIconImage:
			writer.WriteValue("MAIN_ICON_IMAGE");break;
			case MenuSectionItemDocument.Relation.TargetIconImage:
			writer.WriteValue("TARGET_ICON_IMAGE");break;
			}
		}

		public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer) {
			var enumString = (string)reader.Value;
			switch (enumString) {
			case "MEDIA":
			return MenuSectionItemDocument.Relation.Media;
			case "MAIN_IMAGE":
			return MenuSectionItemDocument.Relation.MainImage;
			case "ICON_IMAGE":
			return MenuSectionItemDocument.Relation.IconImage;
			case "MAIN_ICON_IMAGE":
			return MenuSectionItemDocument.Relation.MainIconImage;
			case "TARGET_ICON_IMAGE":
			return MenuSectionItemDocument.Relation.TargetIconImage;
			}
			return null;
		}

		public override bool CanConvert(System.Type objectType) {
			return objectType == typeof(string);
		}
	}

	[JsonProperty("priority")]
	private int internPriority;
	[JsonIgnore]
	public int priority { get => internPriority; set => internPriority = value; }
	[JsonProperty("id")]
	private int internId;
	[JsonIgnore]
	public int id { get => internId; set => internId = value; }
	[JsonProperty("document_id")]
	private int internDocumentId;
	[JsonIgnore]
	public int documentId { get => internDocumentId; set => internDocumentId = value; }
[JsonConverter(typeof(RelationConverter))]
	[JsonProperty("relation")]
	public Relation relation;
	public void print() {
		Debug.Log("object:" + Environment.NewLine + 	"relation:" + relation + Environment.NewLine);
	}
	}
}