//
//  Entrance.cs
//  GuidePilot
//
//  
//
//  Generated by GuidePilot - EnumGenerator
//  Copyright Â© 2021 MicroMovie Media GmbH. All rights reserved.


using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using UnityEngine;
using UnityEngine.Scripting;


namespace com.guidepilot.guidepilotcore {
	[Preserve]
	public class Entrance: Addressed, CoreLinkable, CoreObject, Placed, Prioritized {
	//  Describes the kind of entrance.

	[Preserve]
	public enum Type {
		Afoot,
		Car,
		Wheelchair
	}

	[Preserve]
	public class TypeConverter : JsonConverter {

		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) {
			Entrance.Type castedValue = (Entrance.Type)value;
			switch (castedValue) {
			case Entrance.Type.Afoot:
			writer.WriteValue("AFOOT");break;
			case Entrance.Type.Car:
			writer.WriteValue("CAR");break;
			case Entrance.Type.Wheelchair:
			writer.WriteValue("WHEELCHAIR");break;
			}
		}

		public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer) {
			var enumString = (string)reader.Value;
			switch (enumString) {
			case "AFOOT":
			return Entrance.Type.Afoot;
			case "CAR":
			return Entrance.Type.Car;
			case "WHEELCHAIR":
			return Entrance.Type.Wheelchair;
			}
			return null;
		}

		public override bool CanConvert(System.Type objectType) {
			return objectType == typeof(string);
		}
	}

	[JsonProperty("addr_street")]
	private string internAddrStreet;
	[JsonIgnore]
	public string addrStreet { get => internAddrStreet; set => internAddrStreet = value; }
	[JsonProperty("addr_zip_code")]
	private string internAddrZipCode;
	[JsonIgnore]
	public string addrZipCode { get => internAddrZipCode; set => internAddrZipCode = value; }
	[JsonProperty("addr_city")]
	private string internAddrCity;
	[JsonIgnore]
	public string addrCity { get => internAddrCity; set => internAddrCity = value; }
	[JsonProperty("addr_country")]
	private string internAddrCountry;
	[JsonIgnore]
	public string addrCountry { get => internAddrCountry; set => internAddrCountry = value; }
	[JsonProperty("suuid")]
	private string internSuuid;
	[JsonIgnore]
	public string suuid { get => internSuuid; set => internSuuid = value; }
	[JsonProperty("id")]
	private int internId;
	[JsonIgnore]
	public int id { get => internId; set => internId = value; }
	[JsonProperty("geo_lat")]
	private double internGeoLat;
	[JsonIgnore]
	public double geoLat { get => internGeoLat; set => internGeoLat = value; }
	[JsonProperty("geo_long")]
	private double internGeoLong;
	[JsonIgnore]
	public double geoLong { get => internGeoLong; set => internGeoLong = value; }
	[JsonProperty("priority")]
	private int internPriority;
	[JsonIgnore]
	public int priority { get => internPriority; set => internPriority = value; }
[JsonConverter(typeof(TypeConverter))]
	[JsonProperty("type")]
	public Type type;
	public void print() {
		Debug.Log("object:" + Environment.NewLine + 	"type:" + type + Environment.NewLine);
	}
	}
}