//
//  GeoLocationTrigger.cs
//  GuidePilot
//
//  Trigger a zone by external reference
//
//  Generated by GuidePilot - EnumGenerator
//  Copyright Â© 2021 MicroMovie Media GmbH. All rights reserved.


using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using UnityEngine;
using UnityEngine.Scripting;


namespace com.guidepilot.guidepilotcore {
	[Preserve]
	public class GeoLocationTrigger: CoreLinkable, CoreObject, Placed {
	[JsonProperty("suuid")]
	private string internSuuid;
	[JsonIgnore]
	public string suuid { get => internSuuid; set => internSuuid = value; }
	[JsonProperty("id")]
	private int internId;
	[JsonIgnore]
	public int id { get => internId; set => internId = value; }
	[JsonProperty("geo_lat")]
	private double internGeoLat;
	[JsonIgnore]
	public double geoLat { get => internGeoLat; set => internGeoLat = value; }
	[JsonProperty("geo_long")]
	private double internGeoLong;
	[JsonIgnore]
	public double geoLong { get => internGeoLong; set => internGeoLong = value; }
	[JsonProperty("gp_zone_id")]
	public int gpZoneId;
	[JsonProperty("radius")]
	public int radius;
	[JsonProperty("approx_north")]
	public double approxNorth;
	[JsonProperty("approx_east")]
	public double approxEast;
	[JsonProperty("approx_south")]
	public double approxSouth;
	[JsonProperty("approx_west")]
	public double approxWest;
	public void print() {
		Debug.Log("object:" + Environment.NewLine + 	"gpZoneId:" + gpZoneId + Environment.NewLine + 	"radius:" + radius + Environment.NewLine + 	"approxNorth:" + approxNorth + Environment.NewLine + 	"approxEast:" + approxEast + Environment.NewLine + 	"approxSouth:" + approxSouth + Environment.NewLine + 	"approxWest:" + approxWest + Environment.NewLine);
	}
	}
}