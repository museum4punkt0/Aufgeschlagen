//
//  TimedFilter.cs
//  GuidePilot
//
//  Generated by GuidePilot - EnumGenerator
//  Copyright Â© 2021 MicroMovie Media GmbH. All rights reserved.


using System;
using Newtonsoft.Json;
using UnityEngine.Scripting;

namespace com.guidepilot.guidepilotcore {
	[Preserve]
	public enum TimedFilter {
		Former,
		Current,
		Upcoming
	}

	[Preserve]
	public class TimedFilterConverter : JsonConverter {

		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) {
			TimedFilter castedValue = (TimedFilter)value;
			switch (castedValue) {
			case TimedFilter.Former:
			writer.WriteValue("FORMER");break;
			case TimedFilter.Current:
			writer.WriteValue("CURRENT");break;
			case TimedFilter.Upcoming:
			writer.WriteValue("UPCOMING");break;
			}
		}

		public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer) {
			var enumString = (string)reader.Value;
			switch (enumString) {
			case "FORMER":
			return TimedFilter.Former;
			case "CURRENT":
			return TimedFilter.Current;
			case "UPCOMING":
			return TimedFilter.Upcoming;
			}
			return null;
		}

		public override bool CanConvert(System.Type objectType) {
			return objectType == typeof(string);
		}
	}}
