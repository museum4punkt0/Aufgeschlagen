//
//  DataType.cs
//  GuidePilot
//
//  Describes data format of a embedded property.
//
//  Generated by GuidePilot - EnumGenerator
//  Copyright Â© 2021 MicroMovie Media GmbH. All rights reserved.


using System;
using Newtonsoft.Json;
using UnityEngine.Scripting;

namespace com.guidepilot.guidepilotcore {
	[Preserve]
	public enum DataType {
		String,
		Int,
		Float,
		Bool,
		Timestamp
	}

	[Preserve]
	public class DataTypeConverter : JsonConverter {

		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) {
			DataType castedValue = (DataType)value;
			switch (castedValue) {
			case DataType.String:
			writer.WriteValue("STRING");break;
			case DataType.Int:
			writer.WriteValue("INT");break;
			case DataType.Float:
			writer.WriteValue("FLOAT");break;
			case DataType.Bool:
			writer.WriteValue("BOOL");break;
			case DataType.Timestamp:
			writer.WriteValue("TIMESTAMP");break;
			}
		}

		public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer) {
			var enumString = (string)reader.Value;
			switch (enumString) {
			case "STRING":
			return DataType.String;
			case "INT":
			return DataType.Int;
			case "FLOAT":
			return DataType.Float;
			case "BOOL":
			return DataType.Bool;
			case "TIMESTAMP":
			return DataType.Timestamp;
			}
			return null;
		}

		public override bool CanConvert(System.Type objectType) {
			return objectType == typeof(string);
		}
	}}
