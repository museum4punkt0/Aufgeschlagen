//
//  PermissionAllow.cs
//  GuidePilot
//
//  This is the second part of the mime type.
//
//  Generated by GuidePilot - EnumGenerator
//  Copyright Â© 2021 MicroMovie Media GmbH. All rights reserved.


using System;
using Newtonsoft.Json;
using UnityEngine.Scripting;

namespace com.guidepilot.guidepilotcore {
	[Preserve]
	public enum PermissionAllow {
		Always,
		Intern,
		Never
	}

	[Preserve]
	public class PermissionAllowConverter : JsonConverter {

		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) {
			PermissionAllow castedValue = (PermissionAllow)value;
			switch (castedValue) {
			case PermissionAllow.Always:
			writer.WriteValue("ALWAYS");break;
			case PermissionAllow.Intern:
			writer.WriteValue("INTERN");break;
			case PermissionAllow.Never:
			writer.WriteValue("NEVER");break;
			}
		}

		public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer) {
			var enumString = (string)reader.Value;
			switch (enumString) {
			case "ALWAYS":
			return PermissionAllow.Always;
			case "INTERN":
			return PermissionAllow.Intern;
			case "NEVER":
			return PermissionAllow.Never;
			}
			return null;
		}

		public override bool CanConvert(System.Type objectType) {
			return objectType == typeof(string);
		}
	}}
